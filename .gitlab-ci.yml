variables:
  # This will supress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  #MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version"

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_REF_NAME"'
cache:
  key: "$CI_JOB_REF_NAME"
  paths:
    - .m2/repository

image: maven:3.5-jdk-8
stages:
  - build
  - unit
  - analyse
  - integration
  - deploy

validate:
  stage: build
  script:
    - echo "Code style validation and compile source and tests"
    - LANG=C mvn ${MAVEN_CLI_OPTS} test-compile

unit-testing:
  stage: unit
  script:
    - echo "Unit tests"
    - LANG=C mvn ${MAVEN_CLI_OPTS} test

analysation:
  stage: analyse
  script:
    - echo "PMD, CPD and FindBugs static code analysis"
    - LANG=C mvn ${MAVEN_CLI_OPTS} verify -DskipTests

integration-testing:
  stage: integration
  script:
    - echo "Integration tests"
    - LANG=C mvn ${MAVEN_CLI_OPTS} verify -DskipUTs -Dpmd.skip=true -Dcpd.skip=true -Dfindbugs.skip=true